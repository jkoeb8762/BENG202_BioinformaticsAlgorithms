#!/usr/bin/env python
# coding: utf-8

# In[4]:


def InverseBWT(text):
    n = len(text)
    right_col = []
    counts = {}
    for char in text:
        if char not in counts:
            counts[char] = 1
        else:
            counts[char] += 1
        count = counts[char]
        working = char + str(count)
        right_col.append(working)
    left_col = sorted(right_col, key=lambda x: x[0])
    row = []
    row.append('$1')
    for i in range(n-1):
        last = row[i]
        for index, char in enumerate(right_col):
            if char == last:
                idx = index
                break
        row.append(left_col[idx])
    output = ''
    m = len(row)
    for i in range(1, m):
        output += ''.join(x for x in row[i] if not x.isdigit())
    output += '$'
    return output


# In[8]:


InverseBWT('enwvpeoseu$llt')


# In[6]:


text = "CCCCTGACCTCTGGACGAGGAGACTGCGGTGTATCGCCCGACCCGTACATACCGCTGTCGCGTCCCTCCGCGCGTGATATCTTAAGCTAAACACCGTCATCGTAAAAAAAAATATCCTTTGCTCGATCCGGCGGACGTGTATGTAGCGGAAGCTGGACCTTCGTTCGAGTCATTGGTTAGCACAGAGCGCGCATTGCTGAGTCCTGGTTGGCGTTCAACGACGGTCACTGTGGCACCTGACGCCCCACTAAGCCCTAGTGACACTTCCGAAGTGTACGTTACAATCTTGCGAAGAATGGTGCAGCGATTCATCATGGACGAGCGTGTAGGGGCGGAATGGCCGTAGCTCATATTGAGCCGCAGGAGTTACTCGTCGTGCGCGAATCCAATGAGTCTACAAGATTACATCATCACACAACGATCCGACCCTCCCAGAAACGCCATATCATAAGACATACATTCTCACGCTTACCTACAGTGTGCAGCATGACACACTCACACGACC$AGACGTTTCCGGTCACGAAGTCTGTACGACGGCCTGGCGGCGTTAGTGGCCGGGTGTTCACTTATCCTTGTAGCTACAGTCGTAAGGACGGAGATTTCTCTTGAACACTGCCGACAATAGCTAAGTGTACCATCTGCTCGAATAGCAGTCAATTACGCTAACTCACCAAACGTATGTAGTCGAAAGGGGGGACCATTAATGTTGGCACGCCGTCTATAGGTAGTACGGGGCGGTCCCCAAAGACTACCGCCGTTGATATACAGCTGGTACTGTGAGAAGGATAATACTTTGGTACAATAGGCGGGCAGGATCACTGAGGACCCGACGGTGGAACGACCGATATAAGTGCGTCCGATGTGCACGTTCCCTAGTCTAGCAAAATTGACACGTCTGACAGCAGAACCGGGAAAGAACTCTAGGATGTTTGATGGAGACTGACCATCCAGTACCTTCCCAGGCTTACA"


# In[7]:


InverseBWT(text)


# In[ ]:




